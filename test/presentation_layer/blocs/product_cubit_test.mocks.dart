// Mocks generated by Mockito 5.3.2 from annotations
// in clean_architecture/test/presentation_layer/blocs/product_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:clean_architecture/domain_layer/entities/product_response_entity.dart'
    as _i6;
import 'package:clean_architecture/domain_layer/repositories/products_repository.dart'
    as _i2;
import 'package:clean_architecture/domain_layer/usecases/fetch_products_uc.dart'
    as _i4;
import 'package:either_dart/either.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductsRepository_0 extends _i1.SmartFake
    implements _i2.ProductsRepository {
  _FakeProductsRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FetchProductsUC].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchProductsUC extends _i1.Mock implements _i4.FetchProductsUC {
  @override
  _i2.ProductsRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeProductsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeProductsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ProductsRepository);
  @override
  _i5.Future<_i3.Either<String, _i6.ProductResponseEntity>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Either<String, _i6.ProductResponseEntity>>.value(
                _FakeEither_1<String, _i6.ProductResponseEntity>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<String, _i6.ProductResponseEntity>>.value(
                _FakeEither_1<String, _i6.ProductResponseEntity>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<String, _i6.ProductResponseEntity>>);
}
